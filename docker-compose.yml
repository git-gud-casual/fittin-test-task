version: "3.9"

services:
  app:
    container_name: fur_app
    build:
      dockerfile: ./app/Dockerfile
      target: api
    ports:
      - "0.0.0.0:5555:8000"
    depends_on:
      - postgres
      - redis
    environment:
      POSTGRES_NAME: ${POSTGRES_NAME}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      YDX_CLIENT_ID: ${YDX_CLIENT_ID}
      YDX_CLIENT_SECRET: ${YDX_CLIENT_SECRET}
      DEFAULT_FROM_EMAIL: ${DEFAULT_FROM_EMAIL}
      EMAIL_HOST_USER: ${EMAIL_HOST_USER}
      EMAIL_HOST_PASSWORD: ${EMAIL_HOST_PASSWORD}
      EMAIL_HOST: ${EMAIL_HOST}
      EMAIL_USE_SSL: ${EMAIL_USE_SSL}
      EMAIL_PORT: ${EMAIL_PORT}
    restart: on-failure

  worker:
    container_name: fur_celery_worker
    build:
      dockerfile: ./app/Dockerfile
      target: worker
    depends_on:
      - postgres
      - redis
    environment:
      POSTGRES_NAME: ${POSTGRES_NAME}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      YDX_CLIENT_ID: ${YDX_CLIENT_ID}
      YDX_CLIENT_SECRET: ${YDX_CLIENT_SECRET}
      DEFAULT_FROM_EMAIL: ${DEFAULT_FROM_EMAIL}
      EMAIL_HOST_USER: ${EMAIL_HOST_USER}
      EMAIL_HOST_PASSWORD: ${EMAIL_HOST_PASSWORD}
      EMAIL_HOST: ${EMAIL_HOST}
      EMAIL_USE_SSL: ${EMAIL_USE_SSL}
      EMAIL_PORT: ${EMAIL_PORT}
    restart: on-failure

  postgres:
    container_name: fur_app_db
    image: "postgres:16.3"
    environment:
      POSTGRES_DB: ${POSTGRES_NAME}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}

  redis:
    image: redis:7-alpine3.20
    restart: on-failure
