version: "3.9"

services:
  nginx:
    container_name: fur-nginx-${ENVIRONMENT}
    image: nginx:alpine
    ports:
      - "0.0.0.0:8888:80"
      - "0.0.0.0:8889:443"
    volumes:
      - "/etc/ssl/certs/fittin_cert.pem:/etc/ssl/certs/fittin_cert.pem"
      - "/etc/ssl/private/fittin_key.pem:/etc/ssl/private/fittin_key.pem"
      - "./nginx.conf:/etc/nginx/nginx.conf"
    depends_on:
      - app

  app:
    container_name: fur-app-${ENVIRONMENT}
    build:
      dockerfile: ./app/Dockerfile
      target: api
    depends_on:
      - postgres
      - redis
    environment:
      ENVIRONMENT: ${ENVIRONMENT}
      SECRET_KEY: ${SECRET_KEY}
      POSTGRES_NAME: ${POSTGRES_NAME}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      YDX_CLIENT_ID: ${YDX_CLIENT_ID}
      YDX_CLIENT_SECRET: ${YDX_CLIENT_SECRET}
      DEFAULT_FROM_EMAIL: ${DEFAULT_FROM_EMAIL}
      EMAIL_HOST_USER: ${EMAIL_HOST_USER}
      EMAIL_HOST_PASSWORD: ${EMAIL_HOST_PASSWORD}
      EMAIL_HOST: ${EMAIL_HOST}
      EMAIL_USE_SSL: ${EMAIL_USE_SSL}
      EMAIL_PORT: ${EMAIL_PORT}
      DJANGO_SUPERUSER_USERNAME: ${DJANGO_SUPERUSER_USERNAME}
      DJANGO_SUPERUSER_PASSWORD: ${DJANGO_SUPERUSER_PASSWORD}
      DJANGO_SUPERUSER_EMAIL: ${DJANGO_SUPERUSER_EMAIL}

  worker:
    container_name: fur-celery-worker-${ENVIRONMENT}
    build:
      dockerfile: ./app/Dockerfile
      target: worker
    depends_on:
      - postgres
      - redis
    environment:
      ENVIRONMENT: ${ENVIRONMENT}
      SECRET_KEY: ${SECRET_KEY}
      POSTGRES_NAME: ${POSTGRES_NAME}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      YDX_CLIENT_ID: ${YDX_CLIENT_ID}
      YDX_CLIENT_SECRET: ${YDX_CLIENT_SECRET}
      DEFAULT_FROM_EMAIL: ${DEFAULT_FROM_EMAIL}
      EMAIL_HOST_USER: ${EMAIL_HOST_USER}
      EMAIL_HOST_PASSWORD: ${EMAIL_HOST_PASSWORD}
      EMAIL_HOST: ${EMAIL_HOST}
      EMAIL_USE_SSL: ${EMAIL_USE_SSL}
      EMAIL_PORT: ${EMAIL_PORT}
    restart: on-failure

  postgres:
    container_name: fur-db-${ENVIRONMENT}
    image: "postgres:16.3"
    volumes:
      - "/home/ubuntu/fittin-test/postgres-data:/var/lib/postgresql/data"
    environment:
      POSTGRES_DB: ${POSTGRES_NAME}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}

  redis:
    image: redis:7-alpine3.20
    container_name: fur-redis-${ENVIRONMENT}
    restart: on-failure
